[
  {
    "objectID": "Slides.html#census-api",
    "href": "Slides.html#census-api",
    "title": "Accessing Census Data in R through APIs",
    "section": "Census API",
    "text": "Census API\n\nWhat is the Census API?\n\nAn API that gives access to data from many programs\n\nPrograms include:\n\nAmerican Community Survey: tables and microdata\nDecennial Census\nPopulation Estimates and Projections\nAnd more\n\nCensus documentation"
  },
  {
    "objectID": "Slides.html#useful-r-packages",
    "href": "Slides.html#useful-r-packages",
    "title": "Accessing Census Data in R through APIs",
    "section": "Useful R packages",
    "text": "Useful R packages\n\ncensusapi\n\nAny data program available on Census API\nData is not cleaned\nNot discussed today\n\ntidycensus\n\nACS tables, ACS microdata, Decennial tables, PEP tables, and ACS migration flow data\nNice wrappers\nData has special missing codes changed to NA"
  },
  {
    "objectID": "Slides.html#api-keys",
    "href": "Slides.html#api-keys",
    "title": "Accessing Census Data in R through APIs",
    "section": "API keys",
    "text": "API keys\n\nAn API key is needed and needs to be requested1\nBad practice to store an API key in your code\nInstall the API key locally to your .Renviron file\nOnly need to do this per device you use\n\ntidycensus::census_api_key(\"abcdefghijkl\", overwrite = TRUE, install = TRUE)\nRetrieve using:\nSys.getenv(\"CENSUS_API_KEY\")\nhttps://api.census.gov/data/key_signup.html"
  },
  {
    "objectID": "Slides.html#workflow-for-getting-tabular-estimates",
    "href": "Slides.html#workflow-for-getting-tabular-estimates",
    "title": "Accessing Census Data in R through APIs",
    "section": "Workflow for getting tabular estimates",
    "text": "Workflow for getting tabular estimates\n\nFind the variables using load_variables()\nUse get_acs(), get_decennial(), get_flows(), or get_estimates() to query the data"
  },
  {
    "objectID": "Slides.html#motivating-example",
    "href": "Slides.html#motivating-example",
    "title": "Accessing Census Data in R through APIs",
    "section": "Motivating example",
    "text": "Motivating example\nFind number of housing units by occupancy status in each block group in Durham County, NC from ACS 2019-2023 data\n\nyear_select &lt;- 2023"
  },
  {
    "objectID": "Slides.html#find-variables",
    "href": "Slides.html#find-variables",
    "title": "Accessing Census Data in R through APIs",
    "section": "Find variables",
    "text": "Find variables\n\nLooking at 5-year ACS data\n\n\nlibrary(tidycensus)\nlibrary(sf)\nfindvars_tidy &lt;- load_variables(year = year_select, dataset = \"acs5\")"
  },
  {
    "objectID": "Slides.html#find-variables-1",
    "href": "Slides.html#find-variables-1",
    "title": "Accessing Census Data in R through APIs",
    "section": "Find variables",
    "text": "Find variables\n\nLooking at 5-year ACS data\n\n\nfindvars_tidy %&gt;%\n  arrange(name) %&gt;%\n  filter(str_detect(str_to_lower(concept), \"occupancy\"))\n\n# A tibble: 30 × 4\n   name       label                                            concept geography\n   &lt;chr&gt;      &lt;chr&gt;                                            &lt;chr&gt;   &lt;chr&gt;    \n 1 B25002_001 Estimate!!Total:                                 Occupa… block gr…\n 2 B25002_002 Estimate!!Total:!!Occupied                       Occupa… block gr…\n 3 B25002_003 Estimate!!Total:!!Vacant                         Occupa… block gr…\n 4 B25136_001 Estimate!!Total Housing Units:                   Struct… block gr…\n 5 B25136_002 Estimate!!Total Housing Units:!!Occupied Units   Struct… block gr…\n 6 B25136_003 Estimate!!Total Housing Units:!!Occupied Units!… Struct… block gr…\n 7 B25136_004 Estimate!!Total Housing Units:!!Occupied Units!… Struct… block gr…\n 8 B25136_005 Estimate!!Total Housing Units:!!Occupied Units!… Struct… block gr…\n 9 B25136_006 Estimate!!Total Housing Units:!!Occupied Units!… Struct… block gr…\n10 B25136_007 Estimate!!Total Housing Units:!!Occupied Units!… Struct… block gr…\n# ℹ 20 more rows"
  },
  {
    "objectID": "Slides.html#clean-up-variable-labels-for-later",
    "href": "Slides.html#clean-up-variable-labels-for-later",
    "title": "Accessing Census Data in R through APIs",
    "section": "Clean up variable labels for later",
    "text": "Clean up variable labels for later\n\nmyvars_labeled &lt;-\n  findvars_tidy %&gt;%\n  filter(str_detect(name, \"B25002\")) %&gt;%\n  separate_wider_delim(label, names = c(NA, NA, \"Status\"), delim = \"!!\", too_few = \"align_start\") %&gt;%\n  mutate(Status = if_else(is.na(Status), \"All\", Status)) %&gt;%\n  select(name, Status)\n\nmyvars_labeled\n\n# A tibble: 3 × 2\n  name       Status  \n  &lt;chr&gt;      &lt;chr&gt;   \n1 B25002_001 All     \n2 B25002_002 Occupied\n3 B25002_003 Vacant"
  },
  {
    "objectID": "Slides.html#get-the-data",
    "href": "Slides.html#get-the-data",
    "title": "Accessing Census Data in R through APIs",
    "section": "Get the data",
    "text": "Get the data\n\nvocc_durham_tidy &lt;- get_acs(\n  geography = \"block group\",\n  variables = pull(myvars_labeled, name),\n  year = year_select,\n  survey = \"acs5\",\n  state = \"37\",\n  county = \"063\",\n  geometry = TRUE\n)"
  },
  {
    "objectID": "Slides.html#get-the-data-1",
    "href": "Slides.html#get-the-data-1",
    "title": "Accessing Census Data in R through APIs",
    "section": "Get the data",
    "text": "Get the data\n\nvocc_durham_tidy\n\nSimple feature collection with 714 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -79.0163 ymin: 35.86321 xmax: -78.69985 ymax: 36.23932\nGeodetic CRS:  NAD83\nFirst 10 features:\n          GEOID\n1  370630018023\n2  370630018023\n3  370630018023\n4  370630020152\n5  370630020152\n6  370630020152\n7  370630002002\n8  370630002002\n9  370630002002\n10 370630017132\n                                                               NAME   variable\n1  Block Group 3; Census Tract 18.02; Durham County; North Carolina B25002_001\n2  Block Group 3; Census Tract 18.02; Durham County; North Carolina B25002_002\n3  Block Group 3; Census Tract 18.02; Durham County; North Carolina B25002_003\n4  Block Group 2; Census Tract 20.15; Durham County; North Carolina B25002_001\n5  Block Group 2; Census Tract 20.15; Durham County; North Carolina B25002_002\n6  Block Group 2; Census Tract 20.15; Durham County; North Carolina B25002_003\n7      Block Group 2; Census Tract 2; Durham County; North Carolina B25002_001\n8      Block Group 2; Census Tract 2; Durham County; North Carolina B25002_002\n9      Block Group 2; Census Tract 2; Durham County; North Carolina B25002_003\n10 Block Group 2; Census Tract 17.13; Durham County; North Carolina B25002_001\n   estimate moe                       geometry\n1       628 156 MULTIPOLYGON (((-78.86279 3...\n2       573 151 MULTIPOLYGON (((-78.86279 3...\n3        55  67 MULTIPOLYGON (((-78.86279 3...\n4       454 161 MULTIPOLYGON (((-78.96238 3...\n5       454 161 MULTIPOLYGON (((-78.96238 3...\n6         0  14 MULTIPOLYGON (((-78.96238 3...\n7       429 125 MULTIPOLYGON (((-78.90199 3...\n8       420 124 MULTIPOLYGON (((-78.90199 3...\n9         9  14 MULTIPOLYGON (((-78.90199 3...\n10      199  84 MULTIPOLYGON (((-78.9732 36..."
  },
  {
    "objectID": "Slides.html#label-data",
    "href": "Slides.html#label-data",
    "title": "Accessing Census Data in R through APIs",
    "section": "Label data",
    "text": "Label data\n\nvocc_durham_tidy_lab &lt;-\n  vocc_durham_tidy %&gt;%\n  select(-NAME) %&gt;%\n  left_join(myvars_labeled, by = c(\"variable\" = \"name\"))\n\nvocc_durham_tidy_lab\n\nSimple feature collection with 714 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -79.0163 ymin: 35.86321 xmax: -78.69985 ymax: 36.23932\nGeodetic CRS:  NAD83\nFirst 10 features:\n          GEOID   variable estimate moe   Status                       geometry\n1  370630018023 B25002_001      628 156      All MULTIPOLYGON (((-78.86279 3...\n2  370630018023 B25002_002      573 151 Occupied MULTIPOLYGON (((-78.86279 3...\n3  370630018023 B25002_003       55  67   Vacant MULTIPOLYGON (((-78.86279 3...\n4  370630020152 B25002_001      454 161      All MULTIPOLYGON (((-78.96238 3...\n5  370630020152 B25002_002      454 161 Occupied MULTIPOLYGON (((-78.96238 3...\n6  370630020152 B25002_003        0  14   Vacant MULTIPOLYGON (((-78.96238 3...\n7  370630002002 B25002_001      429 125      All MULTIPOLYGON (((-78.90199 3...\n8  370630002002 B25002_002      420 124 Occupied MULTIPOLYGON (((-78.90199 3...\n9  370630002002 B25002_003        9  14   Vacant MULTIPOLYGON (((-78.90199 3...\n10 370630017132 B25002_001      199  84      All MULTIPOLYGON (((-78.9732 36..."
  },
  {
    "objectID": "Slides.html#bonus---easy-map---by-occupancy-status",
    "href": "Slides.html#bonus---easy-map---by-occupancy-status",
    "title": "Accessing Census Data in R through APIs",
    "section": "Bonus - easy map - by occupancy status",
    "text": "Bonus - easy map - by occupancy status\n\nvocc_durham_tidy_lab %&gt;%\n  filter(Status != \"All\") %&gt;%\n  group_by(GEOID) %&gt;%\n  mutate(Percent = estimate / sum(estimate) * 100) %&gt;%\n  ggplot(aes(fill = Percent)) +\n  geom_sf() +\n  facet_wrap(~Status) +\n  theme_map() +\n  scale_fill_viridis_c(option = \"plasma\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "Slides.html#bonus---easy-map---by-occupancy-status-1",
    "href": "Slides.html#bonus---easy-map---by-occupancy-status-1",
    "title": "Accessing Census Data in R through APIs",
    "section": "Bonus - easy map - by occupancy status",
    "text": "Bonus - easy map - by occupancy status"
  },
  {
    "objectID": "Slides.html#workflow",
    "href": "Slides.html#workflow",
    "title": "Accessing Census Data in R through APIs",
    "section": "Workflow",
    "text": "Workflow\n\nIdentify geography of interest\nIdentify variables of interest (pums_variables)\nUse get_pums() to query data\n\nWarning - this data can be large!!!"
  },
  {
    "objectID": "Slides.html#identify-variables",
    "href": "Slides.html#identify-variables",
    "title": "Accessing Census Data in R through APIs",
    "section": "Identify variables",
    "text": "Identify variables\n\npums_vars_2023 &lt;-\n  pums_variables %&gt;%\n  filter(year == year_select, survey == \"acs5\")\n\npums_vars_2023 %&gt;% print(n = 6)\n\n# A tibble: 5,434 × 12\n  survey year  var_code var_label      data_type level val_min val_max val_label\n  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;    \n1 acs5   2023  SERIALNO Housing unit/… chr       &lt;NA&gt;  2019GQ… 2023GQ… GQ Uniqu…\n2 acs5   2023  SERIALNO Housing unit/… chr       &lt;NA&gt;  2019HU… 2023HU… HU Uniqu…\n3 acs5   2023  DIVISION Division code  chr       &lt;NA&gt;  0       0       Puerto R…\n4 acs5   2023  DIVISION Division code  chr       &lt;NA&gt;  1       1       New Engl…\n5 acs5   2023  DIVISION Division code  chr       &lt;NA&gt;  2       2       Middle A…\n6 acs5   2023  DIVISION Division code  chr       &lt;NA&gt;  3       3       East Nor…\n# ℹ 5,428 more rows\n# ℹ 3 more variables: recode &lt;lgl&gt;, val_length &lt;int&gt;, val_na &lt;dbl&gt;\n\n\n\nThere are 516 distinct variables!\nCan also review data dictionary"
  },
  {
    "objectID": "Slides.html#get-some-microdata",
    "href": "Slides.html#get-some-microdata",
    "title": "Accessing Census Data in R through APIs",
    "section": "Get some microdata",
    "text": "Get some microdata\n\nFor Durham, we want PUMAs 37 01301 and 37 01302 (Durham County South and North, respectively)1\n\npums_recoded &lt;- get_pums(\n  variables = c(\"PUMA\", \"SEX\", \"AGEP\", \"SCHL\", \"SCHG\"),\n  state = \"NC\",\n  puma = c(\"01301\", \"01302\"),\n  survey = \"acs5\",\n  year = year_select,\n  recode = TRUE,\n  rep_weights = \"person\"\n  )\nhttps://www2.census.gov/geo/pdfs/reference/puma2020/2020_PUMA_Names.pdf"
  },
  {
    "objectID": "Slides.html#glimpse-the-microdata",
    "href": "Slides.html#glimpse-the-microdata",
    "title": "Accessing Census Data in R through APIs",
    "section": "Glimpse the microdata",
    "text": "Glimpse the microdata\n\nglimpse(pums_recoded)\n\nRows: 12,665\nColumns: 94\n$ SERIALNO    &lt;chr&gt; \"2022HU0591126\", \"2022HU0591126\", \"2022HU0594386\", \"2022HU…\n$ SPORDER     &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 1, 2, 3, 1, 1, 1, 2, 3, 4, 5, 6, 1, 2, 1…\n$ AGEP        &lt;dbl&gt; 80, 77, 51, 60, 72, 22, 51, 48, 20, 54, 24, 53, 53, 16, 16…\n$ PUMA        &lt;chr&gt; \"01302\", \"01302\", \"01301\", \"01301\", \"01302\", \"01302\", \"013…\n$ STATE       &lt;chr&gt; \"37\", \"37\", \"37\", \"37\", \"37\", \"37\", \"37\", \"37\", \"37\", \"37\"…\n$ SCHG        &lt;chr&gt; \"bb\", \"bb\", \"bb\", \"bb\", \"bb\", \"bb\", \"bb\", \"bb\", \"15\", \"bb\"…\n$ SCHL        &lt;chr&gt; \"18\", \"19\", \"21\", \"21\", \"06\", \"19\", \"09\", \"15\", \"20\", \"17\"…\n$ SEX         &lt;chr&gt; \"1\", \"2\", \"1\", \"1\", \"2\", \"2\", \"1\", \"2\", \"2\", \"2\", \"2\", \"2\"…\n$ STATE_label &lt;ord&gt; North Carolina/NC, North Carolina/NC, North Carolina/NC, N…\n$ SCHG_label  &lt;ord&gt; N/A (not attending school), N/A (not attending school), N/…\n$ SCHL_label  &lt;ord&gt; \"Some college, but less than 1 year\", \"1 or more years of …\n$ SEX_label   &lt;ord&gt; Male, Female, Male, Male, Female, Female, Male, Female, Fe…\n$ WGTP        &lt;dbl&gt; 13, 13, 15, 15, 20, 20, 16, 16, 16, 46, 15, 9, 9, 9, 9, 9,…\n$ PWGTP       &lt;dbl&gt; 13, 13, 15, 28, 20, 7, 16, 12, 9, 46, 15, 8, 20, 12, 13, 1…\n$ PWGTP1      &lt;dbl&gt; 15, 13, 23, 46, 30, 5, 23, 18, 10, 57, 27, 16, 38, 26, 19,…\n$ PWGTP2      &lt;dbl&gt; 12, 12, 21, 31, 18, 7, 20, 24, 14, 15, 5, 4, 8, 3, 4, 4, 5…\n$ PWGTP3      &lt;dbl&gt; 4, 4, 6, 8, 12, 3, 26, 17, 19, 70, 21, 3, 5, 4, 5, 5, 5, 5…\n$ PWGTP4      &lt;dbl&gt; 17, 17, 23, 48, 30, 12, 13, 17, 9, 41, 23, 8, 18, 9, 16, 1…\n$ PWGTP5      &lt;dbl&gt; 20, 20, 16, 25, 27, 16, 5, 4, 4, 14, 30, 10, 18, 8, 9, 15,…\n$ PWGTP6      &lt;dbl&gt; 3, 4, 29, 45, 33, 11, 17, 16, 7, 16, 17, 11, 20, 15, 15, 1…\n$ PWGTP7      &lt;dbl&gt; 5, 5, 19, 27, 40, 11, 15, 18, 13, 56, 14, 20, 37, 18, 29, …\n$ PWGTP8      &lt;dbl&gt; 26, 24, 4, 8, 6, 2, 23, 17, 12, 55, 18, 9, 20, 15, 13, 14,…\n$ PWGTP9      &lt;dbl&gt; 12, 13, 12, 22, 43, 6, 14, 10, 8, 43, 16, 3, 5, 3, 3, 3, 4…\n$ PWGTP10     &lt;dbl&gt; 12, 12, 4, 10, 19, 6, 23, 20, 13, 55, 22, 10, 23, 10, 19, …\n$ PWGTP11     &lt;dbl&gt; 25, 23, 20, 38, 44, 14, 18, 11, 11, 49, 3, 3, 7, 4, 4, 5, …\n$ PWGTP12     &lt;dbl&gt; 14, 14, 14, 26, 5, 2, 8, 4, 2, 73, 18, 3, 5, 4, 3, 4, 4, 1…\n$ PWGTP13     &lt;dbl&gt; 21, 21, 4, 8, 26, 6, 4, 4, 2, 47, 29, 17, 31, 19, 23, 23, …\n$ PWGTP14     &lt;dbl&gt; 13, 14, 4, 10, 28, 8, 4, 3, 3, 13, 5, 7, 15, 10, 10, 14, 1…\n$ PWGTP15     &lt;dbl&gt; 12, 14, 14, 28, 8, 2, 15, 10, 8, 73, 18, 14, 27, 19, 20, 2…\n$ PWGTP16     &lt;dbl&gt; 11, 11, 18, 42, 26, 8, 17, 20, 10, 39, 5, 9, 19, 13, 18, 1…\n$ PWGTP17     &lt;dbl&gt; 3, 4, 17, 30, 23, 7, 11, 9, 8, 95, 16, 8, 19, 13, 12, 14, …\n$ PWGTP18     &lt;dbl&gt; 14, 17, 16, 25, 5, 2, 12, 9, 8, 59, 26, 16, 31, 18, 19, 19…\n$ PWGTP19     &lt;dbl&gt; 5, 4, 23, 33, 17, 8, 17, 9, 7, 13, 14, 8, 19, 9, 10, 16, 1…\n$ PWGTP20     &lt;dbl&gt; 20, 20, 18, 40, 14, 7, 27, 25, 16, 65, 4, 6, 17, 10, 10, 1…\n$ PWGTP21     &lt;dbl&gt; 15, 14, 33, 42, 16, 8, 4, 5, 3, 48, 19, 2, 6, 3, 3, 5, 5, …\n$ PWGTP22     &lt;dbl&gt; 11, 11, 20, 40, 14, 8, 3, 3, 2, 15, 4, 15, 37, 26, 26, 28,…\n$ PWGTP23     &lt;dbl&gt; 4, 4, 5, 6, 30, 9, 4, 4, 2, 58, 15, 13, 30, 16, 23, 23, 23…\n$ PWGTP24     &lt;dbl&gt; 13, 12, 22, 46, 6, 2, 19, 15, 9, 41, 22, 9, 17, 13, 15, 19…\n$ PWGTP25     &lt;dbl&gt; 16, 16, 17, 29, 9, 1, 40, 21, 13, 13, 26, 10, 19, 16, 12, …\n$ PWGTP26     &lt;dbl&gt; 4, 4, 21, 43, 7, 2, 20, 12, 9, 13, 12, 7, 19, 9, 10, 17, 1…\n$ PWGTP27     &lt;dbl&gt; 4, 5, 13, 26, 7, 2, 5, 6, 2, 47, 13, 2, 5, 4, 3, 5, 4, 17,…\n$ PWGTP28     &lt;dbl&gt; 26, 27, 4, 9, 36, 11, 18, 17, 9, 39, 17, 7, 16, 9, 11, 15,…\n$ PWGTP29     &lt;dbl&gt; 13, 13, 15, 29, 21, 6, 21, 13, 7, 49, 19, 14, 35, 15, 26, …\n$ PWGTP30     &lt;dbl&gt; 12, 12, 4, 10, 25, 6, 5, 3, 2, 40, 20, 8, 23, 12, 12, 15, …\n$ PWGTP31     &lt;dbl&gt; 21, 24, 27, 45, 6, 4, 13, 12, 15, 48, 4, 13, 31, 19, 24, 2…\n$ PWGTP32     &lt;dbl&gt; 14, 14, 17, 29, 25, 16, 31, 22, 20, 63, 15, 16, 36, 15, 30…\n$ PWGTP33     &lt;dbl&gt; 23, 24, 4, 8, 13, 6, 33, 25, 15, 57, 27, 3, 6, 2, 4, 5, 6,…\n$ PWGTP34     &lt;dbl&gt; 11, 11, 4, 10, 20, 5, 36, 20, 11, 19, 5, 9, 21, 14, 14, 15…\n$ PWGTP35     &lt;dbl&gt; 13, 13, 20, 32, 29, 10, 12, 12, 7, 80, 16, 2, 6, 4, 3, 4, …\n$ PWGTP36     &lt;dbl&gt; 10, 11, 16, 31, 19, 8, 10, 10, 9, 52, 4, 10, 20, 11, 13, 1…\n$ PWGTP37     &lt;dbl&gt; 4, 4, 17, 26, 20, 8, 15, 15, 9, 55, 15, 7, 18, 11, 18, 17,…\n$ PWGTP38     &lt;dbl&gt; 17, 19, 9, 23, 26, 10, 19, 16, 9, 42, 26, 2, 5, 3, 4, 3, 3…\n$ PWGTP39     &lt;dbl&gt; 4, 3, 13, 30, 17, 8, 18, 9, 8, 14, 11, 7, 19, 11, 14, 15, …\n$ PWGTP40     &lt;dbl&gt; 26, 22, 9, 9, 14, 8, 35, 27, 19, 19, 24, 10, 17, 11, 15, 1…\n$ PWGTP41     &lt;dbl&gt; 10, 12, 5, 7, 25, 5, 5, 5, 2, 43, 5, 12, 29, 21, 21, 22, 2…\n$ PWGTP42     &lt;dbl&gt; 15, 13, 17, 32, 16, 6, 5, 2, 2, 65, 27, 2, 8, 3, 5, 4, 5, …\n$ PWGTP43     &lt;dbl&gt; 5, 3, 23, 36, 37, 14, 4, 4, 3, 15, 14, 2, 5, 3, 3, 4, 5, 3…\n$ PWGTP44     &lt;dbl&gt; 14, 12, 4, 8, 6, 3, 17, 11, 9, 34, 4, 6, 16, 10, 11, 13, 1…\n$ PWGTP45     &lt;dbl&gt; 27, 24, 12, 29, 6, 3, 25, 21, 22, 55, 4, 7, 17, 8, 12, 11,…\n$ PWGTP46     &lt;dbl&gt; 3, 4, 4, 13, 5, 2, 13, 11, 9, 71, 13, 9, 20, 13, 17, 20, 1…\n$ PWGTP47     &lt;dbl&gt; 4, 3, 18, 41, 6, 2, 4, 5, 2, 46, 13, 16, 32, 18, 20, 29, 2…\n$ PWGTP48     &lt;dbl&gt; 15, 18, 29, 58, 23, 18, 15, 13, 13, 45, 13, 9, 22, 10, 12,…\n$ PWGTP49     &lt;dbl&gt; 12, 12, 15, 39, 22, 7, 14, 10, 9, 47, 15, 3, 7, 3, 4, 5, 5…\n$ PWGTP50     &lt;dbl&gt; 13, 14, 25, 37, 13, 9, 4, 4, 3, 48, 14, 7, 21, 12, 13, 15,…\n$ PWGTP51     &lt;dbl&gt; 18, 19, 4, 7, 11, 2, 17, 12, 9, 45, 22, 2, 6, 3, 4, 4, 4, …\n$ PWGTP52     &lt;dbl&gt; 15, 14, 12, 25, 27, 13, 20, 17, 19, 14, 19, 2, 6, 4, 4, 4,…\n$ PWGTP53     &lt;dbl&gt; 25, 23, 22, 37, 21, 7, 27, 20, 13, 48, 5, 10, 25, 17, 15, …\n$ PWGTP54     &lt;dbl&gt; 15, 13, 29, 45, 25, 9, 29, 22, 17, 56, 21, 7, 17, 9, 17, 1…\n$ PWGTP55     &lt;dbl&gt; 14, 15, 18, 25, 35, 9, 10, 11, 6, 17, 14, 16, 40, 22, 26, …\n$ PWGTP56     &lt;dbl&gt; 13, 17, 13, 28, 20, 7, 15, 9, 8, 46, 17, 7, 19, 10, 13, 16…\n$ PWGTP57     &lt;dbl&gt; 4, 4, 15, 22, 15, 6, 15, 10, 8, 13, 16, 7, 21, 11, 11, 13,…\n$ PWGTP58     &lt;dbl&gt; 10, 11, 12, 25, 23, 8, 14, 11, 5, 45, 5, 13, 36, 18, 22, 2…\n$ PWGTP59     &lt;dbl&gt; 4, 4, 14, 32, 22, 6, 17, 22, 9, 58, 16, 9, 23, 10, 12, 14,…\n$ PWGTP60     &lt;dbl&gt; 20, 20, 4, 7, 27, 6, 4, 4, 2, 21, 22, 8, 21, 12, 12, 15, 1…\n$ PWGTP61     &lt;dbl&gt; 12, 12, 5, 9, 25, 6, 24, 20, 13, 62, 5, 2, 5, 3, 4, 4, 4, …\n$ PWGTP62     &lt;dbl&gt; 14, 14, 10, 24, 22, 7, 32, 21, 14, 79, 28, 15, 24, 17, 23,…\n$ PWGTP63     &lt;dbl&gt; 4, 3, 27, 44, 7, 2, 28, 17, 9, 13, 15, 20, 39, 20, 22, 28,…\n$ PWGTP64     &lt;dbl&gt; 12, 14, 6, 8, 44, 12, 15, 10, 8, 46, 7, 10, 20, 14, 11, 13…\n$ PWGTP65     &lt;dbl&gt; 22, 23, 10, 25, 38, 12, 5, 4, 2, 87, 6, 8, 15, 11, 16, 14,…\n$ PWGTP66     &lt;dbl&gt; 4, 3, 8, 10, 41, 11, 21, 16, 8, 81, 19, 8, 22, 9, 18, 15, …\n$ PWGTP67     &lt;dbl&gt; 3, 4, 23, 34, 40, 12, 26, 17, 15, 46, 11, 3, 8, 5, 4, 5, 5…\n$ PWGTP68     &lt;dbl&gt; 17, 18, 27, 49, 7, 2, 22, 14, 8, 48, 17, 11, 18, 11, 17, 1…\n$ PWGTP69     &lt;dbl&gt; 14, 12, 13, 36, 18, 6, 13, 17, 7, 41, 16, 16, 35, 26, 24, …\n$ PWGTP70     &lt;dbl&gt; 15, 13, 17, 38, 16, 6, 26, 24, 14, 52, 21, 8, 22, 14, 11, …\n$ PWGTP71     &lt;dbl&gt; 21, 20, 5, 7, 25, 14, 17, 11, 11, 46, 31, 16, 38, 19, 16, …\n$ PWGTP72     &lt;dbl&gt; 13, 17, 13, 19, 7, 3, 5, 4, 3, 12, 21, 13, 29, 17, 20, 24,…\n$ PWGTP73     &lt;dbl&gt; 25, 24, 24, 46, 13, 7, 5, 4, 2, 49, 5, 3, 6, 4, 5, 4, 5, 2…\n$ PWGTP74     &lt;dbl&gt; 13, 15, 31, 49, 15, 7, 6, 6, 2, 86, 24, 11, 16, 9, 11, 15,…\n$ PWGTP75     &lt;dbl&gt; 11, 13, 10, 28, 8, 2, 10, 13, 7, 21, 18, 3, 6, 3, 4, 5, 5,…\n$ PWGTP76     &lt;dbl&gt; 15, 13, 14, 37, 17, 5, 17, 11, 5, 56, 25, 12, 21, 11, 14, …\n$ PWGTP77     &lt;dbl&gt; 5, 5, 11, 21, 25, 8, 22, 17, 9, 14, 15, 10, 20, 10, 9, 12,…\n$ PWGTP78     &lt;dbl&gt; 12, 12, 14, 27, 6, 3, 14, 10, 11, 51, 5, 2, 5, 3, 3, 4, 4,…\n$ PWGTP79     &lt;dbl&gt; 3, 4, 20, 31, 20, 11, 16, 11, 12, 81, 16, 11, 19, 13, 18, …\n$ PWGTP80     &lt;dbl&gt; 21, 23, 17, 39, 16, 6, 5, 3, 2, 91, 5, 10, 20, 12, 13, 17,…"
  },
  {
    "objectID": "Slides.html#make-custom-estimates",
    "href": "Slides.html#make-custom-estimates",
    "title": "Accessing Census Data in R through APIs",
    "section": "Make custom estimates",
    "text": "Make custom estimates\n\nExample: Level of school attendance among those who have finished high school, age 18-25\n\n\nlibrary(srvyr)\n\npums_recoded %&gt;%\n  to_survey() %&gt;%\n  filter(AGEP %in% c(18:25)) %&gt;%\n  filter(as.numeric(SCHL) &gt;= 16) %&gt;%\n  group_by(PUMA, SCHG_label) %&gt;%\n  summarize(\n    N = survey_total(),\n    Pct = survey_mean() * 100\n  )"
  },
  {
    "objectID": "Slides.html#make-custom-estimates-1",
    "href": "Slides.html#make-custom-estimates-1",
    "title": "Accessing Census Data in R through APIs",
    "section": "Make custom estimates",
    "text": "Make custom estimates\n\nExample: Level of school attendance among those who have finished high school, age 18-25\n\n\n\n# A tibble: 8 × 6\n# Groups:   PUMA [2]\n  PUMA  SCHG_label                                         N  N_se    Pct Pct_se\n  &lt;chr&gt; &lt;ord&gt;                                          &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 01301 N/A (not attending school)                      9769 719.  42.1    2.46 \n2 01301 Grade 12                                          66  55.9  0.284  0.239\n3 01301 College undergraduate years (freshman to seni… 10365 464.  44.7    1.76 \n4 01301 Graduate or professional school beyond a bach…  3013 352.  13.0    1.47 \n5 01302 N/A (not attending school)                      7715 656.  55.5    3.28 \n6 01302 Grade 12                                         429 218.   3.08   1.53 \n7 01302 College undergraduate years (freshman to seni…  4533 484.  32.6    3.16 \n8 01302 Graduate or professional school beyond a bach…  1234 235.   8.87   1.61"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Accessing Census Data in R through APIs",
    "section": "",
    "text": "This talk will give an overview of Census APIs available and how to find out which surveys have data available through the Census API. Brief examples will be given on how to use the censusapi R package which can access any data in the API. The tidycensus R package specifically can access ACS tables, ACS microdata, Decennial tables, PEP tables, and ACS migration flow data. This tutorial will give examples of how to find relevant variables from ACS tables or decennial data using the tidycensus package. Examples of getting the data will be provided and how to easily make maps of the data."
  }
]